# В прошлый раз учитель написал программу,
# которая выводит числа в формате плавающей точки, однако он вспомнил,
# что не учёл одну важную штуку: числа-то могут идти от нуля.
#
# Задано положительное число x (x > 0).
# Ваша задача преобразовать его в формат плавающей точки,
# то есть x = a * 10 ** b, где 1 ≤ а < 10
#
# Обратите внимание, что x теперь больше нуля, а не больше единицы.
# Обеспечьте контроль ввода.
#
# Пример 1:
#
# Введитечисло: 92345
#
# Формат плавающей точки: x = 9.2345 * 10 ** 4
#
# Пример 2:
#
# Введите число: 0.0012
# Формат плавающей точки: x = 1.2 * 10 ** -3
# number = 0.0012

def float_point(number):
    # Цикл контроля ввода
    while True:
        try:
            number = float(number)
            if number > 0:
                break
            else:
                print('Поддерживаются только положительные числа')
                number = input('Введите число: ')
        except ValueError:
            print('Неверный ввод')
            number = input('Введите число: ')

    # Нахожу количество разрядов по '.' в заданном пользователем числе (Зачем? см. дальше)
    rou = len(str(number)) - str(number).find('.') - 1

    if number >= 1:
        count = 0
        # условие работает только для целочисленных значений
        # без последующего округления подобрать не удалось
        # для работы с float значениями добавлено округление в принте
        while number - 10 >= 1e-15:
            number /= 10
            count += 1
            # Округляю до количества разрядов + количество "добавленных" разрядов (костыль)
        print(f'Формат плавающей точки: '
              f'x = {round(number, rou + count)} * 10 ** {count}')
    else:
        count = 0
        while number - 1 <= 1e-15:
            number *= 10
            count -= 1
            # Округляю до количества разрядов + количество "добавленных" разрядов (костыль)
        print(f'Формат плавающей точки: '
              f'x = {round(number, rou + count)} * 10 ** {count}')


number = input('Введите число: ')
float_point(number)
